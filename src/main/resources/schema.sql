CREATE TABLE IF NOT EXISTS FILMS (
    FILM_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RATING_ID INT,
    FILM_NAME VARCHAR NOT NULL,
    DESCRIPTION VARCHAR,
    RELEASE_DATE TIMESTAMP NOT NULL,
    DURATION INT NOT NULL
);

CREATE TABLE IF NOT EXISTS GENRES (
    GENRE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_NAME VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS_GENRES (
    FILM_ID INT NOT NULL,
    GENRE_ID INT NOT NULL,
    PRIMARY KEY (FILM_ID, GENRE_ID),
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS MPA (
    MPA_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_RATING VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS USERS (
    USER_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL VARCHAR NOT NULL UNIQUE,
    LOGIN VARCHAR NOT NULL UNIQUE,
    USER_NAME VARCHAR NOT NULL,
    BIRTHDAY TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS LIKES (
    LIKE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS FRIENDS (
    FRIEND_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID INT NOT NULL,
    FRIEND_USER_ID INT NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (FRIEND_USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
    );

ALTER TABLE FILMS ADD FOREIGN KEY (RATING_ID) REFERENCES MPA (MPA_ID) ON DELETE SET NULL;
